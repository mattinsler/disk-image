#!/usr/bin/env node
(()=>{var e={315:(e,t,n)=>{"use strict";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const r=n(619),s=n(413),{EventEmitter:o}=n(614),c=Symbol("kWritableMustExist"),l={r:{mustExist:!0,readable:!0},"r+":{mustExist:!0,readable:!0,writable:!0},"rs+":{mustExist:!0,readable:!0,writable:!0},w:{truncate:!0,writable:!0},wx:{exclusive:!0,truncate:!0,writable:!0},"w+":{readable:!0,truncate:!0,writable:!0},"wx+":{exclusive:!0,readable:!0,truncate:!0,writable:!0},[c]:{mustExist:!0,writable:!0}},a=["access","chmod","close","copyFile","fchmod","fstat","fsync","fdatasync","lchmod","link","lstat","mkdir","mkdtemp","open","read","readdir","readFile","readlink","realpath","rename","stat","truncate","unlink","write","writeFile"],h=["realpath","realpathSync"],d=["access","appendFile","chmod","chown","copyFile","lchmod","lchown","link","lstat","mkdir","mkdtemp","open","readFile","readdir","readlink","realpath","rename","rmdir","stat","symlink","truncate","unlink","utimes","writeFile"];class u{constructor(e){this._type=e.type,this.dev=1,this.mode=e.mode,this.nlink=1,this.uid=e.uid,this.gid=e.gid,this.rdev=0,this.blksize=1024,this.ino=e.id,this.size="file"===e.type?e.content.length:"symbolicLink"===e.type?e.target.length:0,this.blocks=Math.ceil(this.size/512),this.atimeMs=1,this.mtimeMs=1,this.ctimeMs=1,this.birthtimeMs=1,this.atime=new Date(this.atimeMs),this.mtime=new Date(this.mtimeMs),this.ctime=new Date(this.ctimeMs),this.birthtime=new Date(this.birthtimeMs)}isFile(){return"file"===this._type}isDirectory(){return"directory"===this._type}isBlockDevice(){return!1}isCharacterDevice(){return!1}isSymbolicLink(){return"symbolicLink"===this._type}isFIFO(){return!1}isSocket(){return!1}}class f extends s.Readable{constructor(e){const{highWaterMark:t,fd:n}=e;super(null!=t?{highWaterMark:t}:{}),this.bytesRead=0,this.path=e.filePath,this._readSync=e.readSync,this._fd=n,this._buffer=Buffer.alloc(1024);const{start:i,end:r}=e;null!=i&&this._readSync(n,Buffer.alloc(0),0,0,i),null!=r&&(this._positions={current:i||0,last:r+1})}_read(e){let t;const{_buffer:n}=this;do{const e=this._getLengthToRead(),i=this._positions&&this._positions.current;t=this._readSync(this._fd,n,0,e,i),null!=this._positions&&(this._positions.current+=t),this.bytesRead+=t}while(this.push(t>0?n.slice(0,t):null))}_getLengthToRead(){const{_positions:e,_buffer:t}=this;if(null==e)return t.length;const n=Math.max(0,e.last-e.current);return Math.min(t.length,n)}}class y extends s.Writable{constructor(e){super({emitClose:e.emitClose,autoDestroy:!0}),this.path=e.filePath,this.bytesWritten=0,this._fd=e.fd,this._writeSync=e.writeSync,null!=e.start&&this._writeSync(e.fd,Buffer.alloc(0),0,0,e.start)}_write(e,t,n){try{const t=this._writeSync(this._fd,e,0,e.length);this.bytesWritten+=t}catch(e){return void n(e)}n()}}class p extends o{constructor(e,t){super(),i(this,"_listener",((e,t)=>{const n="buffer"===this._encoding?Buffer.from(t,"utf8"):t;try{this.emit("change",e,n)}catch(e){this.close(),this.emit("error",e)}})),this._encoding=t.encoding,this._nodeWatcher={recursive:t.recursive,listener:this._listener},e.watchers.push(this._nodeWatcher),this._node=e,t.persistent&&(this._persistIntervalId=setInterval((()=>{}),6e4))}close(){this._node.watchers.splice(this._node.watchers.indexOf(this._nodeWatcher)),clearInterval(this._persistIntervalId)}}class m{constructor(e,t){this._stats=new u(e),this.name=t}isBlockDevice(){return this._stats.isBlockDevice()}isCharacterDevice(){return this._stats.isCharacterDevice()}isDirectory(){return this._stats.isDirectory()}isFIFO(){return this._stats.isFIFO()}isFile(){return this._stats.isFile()}isSocket(){return this._stats.isSocket()}isSymbolicLink(){return this._stats.isSymbolicLink()}}function w(e,t){if(e.length>32)throw g("ENAMETOOLONG",t,"file path too long (or one of the intermediate symbolic link resolutions)")}function _(e){return"string"==typeof e?e:e.toString("utf8")}function g(e,t,n){const i=new Error(null!=t?`${e}: \`${t}\`: ${n}`:`${e}: ${n}`);return i.code=e,i.errno=r[e],i.path=t,i}function S(e){if(null==e)throw new Error("item was null or undefined");return e}function v(){return null!=process.getgid?process.getgid():-1}function E(){return null!=process.getuid?process.getuid():-1}function b(e){return"string"==typeof e?Number.parseInt(e,8):e}e.exports=class{constructor(e){i(this,"constants",r),i(this,"Dirent",m),i(this,"accessSync",((e,t)=>{null==t&&(t=r.F_OK);const n=this.statSync(e);if(t==r.F_OK)return;const i=_(e);if(0!=(t&r.R_OK)&&!(0!=(n.mode&r.S_IROTH)||0!=(n.mode&r.S_IRGRP)&&n.gid===v()||0!=(n.mode&r.S_IRUSR)&&n.uid===E()))throw g("EPERM",i,"file cannot be read");if(0!=(t&r.W_OK)&&!(0!=(n.mode&r.S_IWOTH)||0!=(n.mode&r.S_IWGRP)&&n.gid===v()||0!=(n.mode&r.S_IWUSR)&&n.uid===E()))throw g("EPERM",i,"file cannot be written to");if(0!=(t&r.X_OK)&&!(0!=(n.mode&r.S_IXOTH)||0!=(n.mode&r.S_IXGRP)&&n.gid===v()||0!=(n.mode&r.S_IXUSR)&&n.uid===E()))throw g("EPERM",i,"file cannot be executed")})),i(this,"chmodSync",((e,t)=>{e=_(e),t=b(t);const{node:n}=this._resolve(e);if(null==n)throw g("ENOENT",e,"no such file or directory");n.mode=t})),i(this,"closeSync",(e=>{const t=this._getDesc(e);t.writable&&this._emitFileChange(t.nodePath.slice(),{eventType:"change"}),this._fds.delete(e)})),i(this,"copyFileSync",((e,t,n=0)=>{const i=n&r.COPYFILE_EXCL?{flag:"wx"}:{};this.writeFileSync(t,this.readFileSync(e),i)})),i(this,"fchmodSync",((e,t)=>{t=b(t);const{node:n}=this._getDesc(e);n.mode=t})),i(this,"fsyncSync",(e=>{this._getDesc(e)})),i(this,"fdatasyncSync",(e=>{this._getDesc(e)})),i(this,"lchmodSync",((e,t)=>{e=_(e),t=b(t);const{node:n}=this._resolve(e,{keepFinalSymlink:!0});if(null==n)throw g("ENOENT",e,"no such file or directory");n.mode=t})),i(this,"openSync",((e,t,n)=>{if("number"==typeof t)throw new Error(`numeric flags not supported: ${t}`);return this._open(_(e),t,n)})),i(this,"readSync",((e,t,n,i,r)=>{const s=this._getDesc(e);if(!s.readable)throw g("EBADF",null,"file descriptor cannot be written to");null!=r&&(s.position=r);const o=Math.min(s.position+i,s.node.content.length);s.node.content.copy(t,n,s.position,o);const c=o-s.position;return s.position=o,c})),i(this,"readdirSync",((e,t)=>{let n,i;"string"==typeof t?n=t:null!=t&&({encoding:n,withFileTypes:i}=t),e=_(e);const{node:r}=this._resolve(e);if(null==r)throw g("ENOENT",e,"no such file or directory");if("directory"!==r.type)throw g("ENOTDIR",e,"not a directory");return Array.from(r.entries.keys()).map((e=>{let t;if("utf8"===n)t=e;else{const i=Buffer.from(e);t="buffer"===n?i:i.toString(n)}return i?new m(S(r.entries.get(e)),t):t}))})),i(this,"readFileSync",((e,t)=>{let n,i;"string"==typeof t?n=t:null!=t&&({encoding:n,flag:i}=t);const r=this._open(_(e),i||"r"),s=[];try{const e=Buffer.alloc(1024);let t;do{if(t=this.readSync(r,e,0,e.length,null),0===t)continue;const n=Buffer.alloc(t);e.copy(n,0,0,t),s.push(n)}while(t>0)}finally{this.closeSync(r)}const o=Buffer.concat(s);return null==n?o:o.toString(n)})),i(this,"readlinkSync",((e,t)=>{let n;"string"==typeof t?n=t:null!=t&&({encoding:n}=t),e=_(e);const{node:i}=this._resolve(e,{keepFinalSymlink:!0});if(null==i)throw g("ENOENT",e,"no such file or directory");if("symbolicLink"!==i.type)throw g("EINVAL",e,"entity is not a symlink");if(null==n||"utf8"===n)return i.target;const r=Buffer.from(i.target);return"buffer"==n?r:r.toString(n)})),i(this,"realpathSync",(e=>this._resolve(_(e)).realpath)),i(this,"writeSync",((e,t,n,i,r)=>{let s,o,c,l;if("string"==typeof t)r=n,s=i,l=Buffer.from(t,s||"utf8");else{if(o=n,null!=i&&"number"!=typeof i)throw new Error("invalid length");c=i,l=t}return null==o&&(o=0),null==c&&(c=l.length),this._write(e,l,o,c,r)})),i(this,"writeFileSync",((e,t,n)=>{let i,r,s;"string"==typeof n?i=n:null!=n&&({encoding:i,mode:r,flag:s}=n),null==i&&(i="utf8"),"string"==typeof t&&(t=Buffer.from(t,i));const o="number"==typeof e?e:this._open(_(e),s||"w",r);try{this._write(o,t,0,t.length)}finally{"number"!=typeof e&&this.closeSync(o)}})),i(this,"mkdirSync",((e,t)=>{null==t&&(t=511),e=_(e);const{dirNode:n,node:i,basename:r}=this._resolve(e);if(null!=i)throw g("EEXIST",e,"directory or file already exists");n.entries.set(r,this._makeDir(t))})),i(this,"mkdtempSync",((e,t)=>{var n;const i=null!==(n="string"==typeof t?t:null==t?void 0:t.encoding)&&void 0!==n?n:"utf8",r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_";let s="";do{let t="";for(let e=0;e<6;++e)t+=r[Math.floor(Math.random()*r.length)];s=e+t}while(this.existsSync(s));return this.mkdirSync(s,448),Buffer.from(s,"utf8").toString(i)})),i(this,"rmdirSync",(e=>{e=_(e);const{dirNode:t,node:n,basename:i}=this._resolve(e);if(null==n)throw g("ENOENT",e,"directory does not exist");if("file"===n.type)throw"posix"===this._platform?g("ENOTDIR",e,"cannot rm a file"):g("ENOENT",e,"cannot rm a file");if("directory"===n.type&&n.entries.size)throw g("ENOTEMPTY",e,"directory not empty");t.entries.delete(i)})),i(this,"symlinkSync",((e,t,n)=>{if(null==n&&(n="file"),"file"!==n)throw new Error("symlink type not supported");t=_(t);const{dirNode:i,node:r,basename:s}=this._resolve(t);if(null!=r)throw g("EEXIST",t,"directory or file already exists");i.entries.set(s,{id:this._getId(),gid:v(),target:_(e),mode:438,uid:E(),type:"symbolicLink",watchers:[]})})),i(this,"existsSync",(e=>{try{const{node:t}=this._resolve(_(e));return null!=t}catch(e){if("ENOENT"===e.code)return!1;throw e}})),i(this,"statSync",(e=>{e=_(e);const{node:t}=this._resolve(e);if(null==t)throw g("ENOENT",e,"no such file or directory");return new u(t)})),i(this,"lstatSync",(e=>{e=_(e);const{node:t}=this._resolve(e,{keepFinalSymlink:!0});if(null==t)throw g("ENOENT",e,"no such file or directory");return new u(t)})),i(this,"fstatSync",(e=>{const t=this._getDesc(e);return new u(t.node)})),i(this,"createReadStream",((e,t)=>{let n,i,r,s,o,c,l,a;"string"==typeof t?i=t:null!=t&&(({autoClose:n,encoding:i,fd:r,flags:s,mode:o,start:c}=t),({end:l,highWaterMark:a}=t));let h=null;null==r&&(r=this._open(_(e),s||"r",o),process.nextTick((()=>h.emit("open",r))));const d=r,{readSync:u}=this,y=new f({filePath:e,encoding:i,fd:r,highWaterMark:a,start:c,end:l,readSync:u});if(h=y,!1!==n){const e=()=>{this.closeSync(d),y.emit("close")};y.on("end",e),y.on("error",e)}return y})),i(this,"unlinkSync",(e=>{e=_(e);const{basename:t,dirNode:n,dirPath:i,node:r}=this._resolve(e,{keepFinalSymlink:!0});if(null==r)throw g("ENOENT",e,"no such file or directory");if("file"!==r.type&&"symbolicLink"!==r.type)throw g("EISDIR",e,"cannot unlink a directory");n.entries.delete(t),this._emitFileChange(i.concat([[t,r]]),{eventType:"rename"})})),i(this,"renameSync",((e,t)=>{e=_(e),t=_(t);const{basename:n,dirNode:i,dirPath:r,node:s}=this._resolve(e,{keepFinalSymlink:!0});if(null==s)throw g("ENOENT",e,"no such file or directory");const{basename:o,dirNode:c,dirPath:l,node:a}=this._resolve(t,{keepFinalSymlink:!0});if(a!==s){if(l.some((([,e])=>e===s)))throw g("EINVAL",t,"cannot make a directory a subdirectory of itself");if(a)if("directory"===a.type){if(a.entries.size)throw g("ENOTEMPTY",t,"directory not empty")}else if("directory"===s.type)throw g("EISDIR",t,"cannot overwrite a directory with a non-directory");c.entries.set(o,s),a&&this._emitFileChange(l.concat([[o,a]]),{eventType:"rename"}),this._emitFileChange(l.concat([[o,s]]),{eventType:"rename"}),i.entries.delete(n),this._emitFileChange(r.concat([[n,s]]),{eventType:"rename"})}})),i(this,"linkSync",((e,t)=>{e=_(e),t=_(t);const{node:n}=this._resolve(e);if(null==n)throw g("ENOENT",e,"no such file or directory");if("directory"===n.type)throw g("EPERM",e,"cannot create a hard link to a directory");const{basename:i,dirNode:r,dirPath:s,node:o}=this._resolve(t);if(o)throw g("EEXIST",t,"destination path already exists");r.entries.set(i,n),this._emitFileChange(s.concat([[i,n]]),{eventType:"rename"})})),i(this,"truncateSync",((e,t=0)=>{const n="number"==typeof e?e:this._open(_(e),c);try{const i=this._getDesc(n);if(!i.writable)throw g("EBADF",null,"file descriptor cannot be written to");const{node:r,nodePath:s}=i,o=r.content;r.content=Buffer.alloc(t,0),o.copy(r.content,0,0,Math.max(0,Math.min(t,o.length))),this._emitFileChange(s.slice(),{eventType:"change"})}finally{"number"!=typeof e&&this.closeSync(n)}})),i(this,"createWriteStream",((e,t)=>{var n;let i,r,s,o,c,l;"string"!=typeof t&&null!=t&&({autoClose:i,fd:r,flags:s,mode:o,start:c,emitClose:l}=t);let a=null;null==r&&(r=this._open(_(e),s||"w",o),process.nextTick((()=>a.emit("open",r))));const h=r,d={fd:r,writeSync:this._write.bind(this),filePath:e,start:c,emitClose:null!==(n=l)&&void 0!==n&&n},u=new y(d);if(a=u,!1!==i){const e=()=>{this.closeSync(h)};u.on("finish",e),u.on("error",e)}return a})),i(this,"watch",((e,t,n)=>{e=_(e);const{node:i}=this._resolve(e);if(null==i)throw g("ENOENT",e,"no such file or directory");let r,s,o;"string"==typeof t?r=t:null!=t&&({encoding:r,recursive:s,persistent:o}=t);const c=new p(i,{encoding:null!=r?r:"utf8",recursive:null!=s&&s,persistent:null!=o&&o});return null!=n&&c.on("change",n),c})),this._platform=e&&e.platform||"posix",this._cwd=e&&e.cwd,this._pathSep="win32"===this._platform?"\\":"/",this.reset(),a.forEach((e=>{const t=this[`${e}Sync`];this[e]=function(...e){const n=e.pop();process.nextTick((()=>{let i;try{i=t.apply(null,e)}catch(e){return void n(e)}n(null,i)}))}})),h.forEach((e=>{const t=this[e];t.native=t})),this.promises=d.filter((e=>"function"==typeof this[`${e}Sync`])).reduce(((e,t)=>(e[t]=(...e)=>new Promise(((n,i)=>{try{n(this[`${t}Sync`](...e))}catch(e){i(e)}})),e)),{})}reset(){this._nextId=1,this._roots=new Map,"posix"===this._platform?this._roots.set("",this._makeDir(511)):"win32"===this._platform&&this._roots.set("C:",this._makeDir(511)),this._fds=new Map}_makeDir(e){return{entries:new Map,gid:v(),id:this._getId(),mode:e,uid:E(),type:"directory",watchers:[]}}_getId(){return++this._nextId}_open(e,t,n){null==n&&(n=438);const i=l[t];if(null==i)throw new Error(`flags not supported: \`${t.toString()}\``);const{writable:r=!1,readable:s=!1}=i,{exclusive:o,mustExist:c,truncate:a}=i;let h,{dirNode:d,node:u,basename:f,dirPath:y}=this._resolve(e);if(null==u){if(c)throw g("ENOENT",e,"no such file or directory");u={content:Buffer.alloc(0),gid:v(),id:this._getId(),mode:n,uid:E(),type:"file",watchers:[]},d.entries.set(f,u),h=y.concat([[f,u]]),this._emitFileChange(h.slice(),{eventType:"rename"})}else{if(o)throw g("EEXIST",e,"directory or file already exists");if("file"!==u.type)throw g("EISDIR",e,"cannot read/write to a directory");a&&(u.content=Buffer.alloc(0)),h=y.concat([[f,u]])}return this._getFd(e,{nodePath:h,node:u,position:0,readable:s,writable:r})}_parsePath(e){let t;const n="win32"===this._platform?/[\\/]/:/\//;if("win32"===this._platform&&e.match(/^[a-zA-Z]:[\\/]/)&&(t=e.substring(0,2),e=e.substring(3)),n.test(e[0])){if("posix"!==this._platform)throw g("EINVAL",e,"path is invalid because it cannot start with a separator");t="",e=e.substring(1)}return{entNames:e.split(n),drive:t}}_resolve(e,t){let n=!1;if(null!=t&&({keepFinalSymlink:n}=t),""===e)throw g("ENOENT",e,"no such file or directory");let{drive:i,entNames:r}=this._parsePath(e);if(null==i){const{_cwd:t}=this;if(null==t)throw new Error(`The path \`${e}\` cannot be resolved because no current working directory function has been specified. Set the \`cwd\` option field to specify a current working directory.`);const n=this._parsePath(t());if(i=n.drive,null==i)throw new Error(`On a win32 FS, the options' \`cwd()\` must return a valid win32 absolute path. This happened while trying to resolve: \`${e}\``);r=n.entNames.concat(r)}w(r,e);const s=this._getRoot(i,e),o={drive:i,node:s,nodePath:[["",s]],entNames:r,symlinkCount:0,keepFinalSymlink:n};for(;o.entNames.length>0;){const t=o.entNames.shift();this._resolveEnt(o,e,t)}const{nodePath:c}=o;return{drive:o.drive,realpath:o.drive+c.map((e=>e[0])).join(this._pathSep),dirNode:(()=>{const e=c.length>=2?c[c.length-2][1]:o.node;if(null==e||"directory"!==e.type)throw new Error("failed to resolve");return e})(),node:o.node,basename:S(c[c.length-1][0]),dirPath:c.slice(0,-1).map((e=>[e[0],S(e[1])]))}}_resolveEnt(e,t,n){const{node:i}=e;if(null==i)throw g("ENOENT",t,"no such file or directory");if("directory"!==i.type)throw g("ENOTDIR",t,"not a directory");const{entries:r}=i;if(""===n||"."===n)return;if(".."===n){const{nodePath:t}=e;return void(t.length>1&&(t.pop(),e.node=t[t.length-1][1]))}const s=r.get(n);if(null==s||"symbolicLink"!==s.type||e.keepFinalSymlink&&0===e.entNames.length)return e.node=s,void e.nodePath.push([n,s]);if(e.symlinkCount>=10)throw g("ELOOP",t,"too many levels of symbolic links");const{entNames:o,drive:c}=this._parsePath(s.target);null!=c&&(e.drive=c,e.node=this._getRoot(c,t),e.nodePath=[["",e.node]]),e.entNames=o.concat(e.entNames),w(e.entNames,t),++e.symlinkCount}_getRoot(e,t){const n=this._roots.get(e.toUpperCase());if(null==n)throw g("ENOENT",t,`no such drive: \`${e}\``);return n}_write(e,t,n,i,r){const s=this._getDesc(e);if(!s.writable)throw g("EBADF",null,"file descriptor cannot be written to");null==r&&(r=s.position);const{node:o}=s;if(o.content.length<r+i){const e=Buffer.alloc(r+i);o.content.copy(e,0,0,o.content.length),o.content=e}return t.copy(o.content,r,n,n+i),s.position=r+i,t.length}_getFd(e,t){let n=3;for(;this._fds.has(n);)++n;if(n>=256)throw g("EMFILE",e,"too many open files");return this._fds.set(n,t),n}_getDesc(e){const t=this._fds.get(e);if(null==t)throw g("EBADF",null,"file descriptor is not open");return t}_emitFileChange(e,t){const n=e.pop();let i=n[0],r=!1;for(const e of n[1].watchers)e.listener(t.eventType,i);for(;e.length>0;){const n=e.pop();for(const e of n[1].watchers)r&&!e.recursive||e.listener(t.eventType,i);i=n[0]+this._pathSep+i,r=!0}}}},730:(e,t,n)=>{e=n.nmd(e);const i=n(747),r=n(622),{createVm:s}=n(569);function o({config:e,entrypoint:t,volume:n}){const o=s();if(e){e=r.resolve(e);const t=r.dirname(e);e=JSON.parse(i.readFileSync(e,"utf-8")),Object.entries(e).forEach((([e,n])=>o.mount(e,r.resolve(t,n))))}else if(n){const[e,t]=n.split(":");o.mount(e,r.resolve(t))}o.execute(t)}if(n.c[n.s]===e){function c(e){e&&console.log(`ERROR: ${e}`),console.log("Usage: run-disk-image CONFIG_FILE ENTRYPOINT"),process.exit(1)}4!==process.argv.length&&c();let[e,t]=process.argv.slice(2);e=r.resolve(e),!i.existsSync(e)&&c(`Cannot find config file ${e}.`),o({config:e,entrypoint:t})}e.exports=o},91:(e,t,n)=>{const i=n(747),r=n(987),s=n(761);function o(e){return r.deserialize(s.gunzipSync(e))}e.exports={decodeImage:o,loadImage:function(e){return o(i.readFileSync(e))}}},933:(e,t,n)=>{const i=n(747),r=new Set(["copyFile","copyFileSync","link","linkSync","rename","renameSync","symlink","symlinkSync"]),s=new Set(["close","closeSync","fchmod","fchmodSync","fchown","fchownSync","fdatasync","fdatasyncSync","fstat","fstatSync","fsync","fsyncSync","ftruncate","ftruncateSync","futimes","futimesSync","read","readSync","readv","readvSync","write","writeSync","writev","writevSync"]);e.exports={patchFs:function({isMounted:e,memfs:t,originalfs:n}){Object.keys(t).forEach((o=>{i[o]=(...i)=>{if(s.has(o))return t._fds.has(i[0])?t[o].apply(t,i):n[o].apply(n,i);if(r.has(o)){const r=e(i[0]);if(r!==e(i[1]))throw new Error(`Cannot handle fs methods where the src and dest are not either both within the served directories or both outside the served directories: ${i[0]} => ${i[1]}.`);return r?t[o].apply(t,i):n[o].apply(n,i)}return e(i[0])?t[o].apply(t,i):n[o].apply(n,i)}}))}}},242:(e,t,n)=>{const i=n(622),{Module:r}=n(282);e.exports={patchModule:function({isMounted:e,memfs:t}){function n(e){return!(!t.existsSync(e)||t.statSync(e).isDirectory())&&e}function s(e){return[e,`${e}.js`,i.join(e,"index.js")].find(n)||!1}function o(e){const r=i.join(e,"package.json");if(t.existsSync(r)){const{main:o}=JSON.parse(t.readFileSync(r,"utf8"));return o?s(i.join(e,o)):n(i.join(e,"index.js"))}return s(e)}const c=r._findPath;r._findPath=function(t,n,r){if(i.isAbsolute(t))return e(t)?o(t):c(t,n,r);if(!e(i.join(n[0],t)))return c(t,n,r);for(let e=0;e<n.length;++e){const r=o(i.join(n[e],t));if(r)return r}return!1}}}},569:(e,t,n)=>{const{Module:i}=n(282),r=n(315),{patchFs:s}=n(933),{decodeImage:o}=n(91),{patchModule:c}=n(242),l=n(747),a=Object.keys(l).reduce(((e,t)=>(e[t]=l[t],e)),{});function h(e){e=[...e].sort(((e,t)=>{const n=t.location.length-e.location.length;return 0===n?t.location.localeCompare(e.location):n}));const t=new r({cwd:()=>process.cwd(),platform:"posix"});function n(e,t,n){t.slice(0,-1).reduce(((e,t)=>e.entries.get(t)),e).entries.set(t[t.length-1],n)}return{isMounted(i){const r=function(t){return e.find((({location:e})=>t.startsWith(e)))}(i);return!!r&&(function(e){if(!e.isMounted){const r=o(a.readFileSync(e.imageFile)),s=(i=e.location.split("/").filter(Boolean)).reduce(((e,n,r)=>{if(!e.entries.has(n)){let s=511;try{s=a.statSync("/"+i.slice(0,r).join("/")).mode}catch(e){}e.entries.set(n,t._makeDir(s))}return e.entries.get(n)}),t._roots.get(""));r.forEach((([e,[i,...r]])=>{"d"===i?function(e,i,r){n(e,i,t._makeDir(r))}(s,e,...r):"f"===i&&function(e,i,r,s,o,c){n(e,i,{content:c,gid:s,id:t._getId(),mode:r,uid:o,type:"file",watchers:[]})}(s,e,...r)})),e.isMounted=!0}var i}(r),!0)},memfs:t,originalfs:a}}e.exports={createVm:function(){const e=[];return{execute(t){const n=h(e);s(n),c(n),i._load(t,void 0,!0)},mount(t,n){e.push({location:t,imageFile:n})}}}}},619:e=>{"use strict";e.exports=require("constants")},614:e=>{"use strict";e.exports=require("events")},747:e=>{"use strict";e.exports=require("fs")},282:e=>{"use strict";e.exports=require("module")},622:e=>{"use strict";e.exports=require("path")},413:e=>{"use strict";e.exports=require("stream")},987:e=>{"use strict";e.exports=require("v8")},761:e=>{"use strict";e.exports=require("zlib")}},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var s=t[i]={id:i,loaded:!1,exports:{}};return e[i](s,s.exports,n),s.loaded=!0,s.exports}n.c=t,n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),n(n.s=730)})();